package com.demo.itextpdf;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.codec.Base64;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

@SpringBootApplication
@Slf4j
@AllArgsConstructor
public class ItextPdfApplication implements CommandLineRunner {

    public static void main(String[] args) {
        SpringApplication.run(ItextPdfApplication.class, args);
    }

    @Override
    public void run(String... args) throws Exception {
        System.out.println("BEGIN");
        String pdfInitial = "JVBERi0xLjMKJeLjz9MKMiAwIG9iago8PAovQ3JlYXRpb25EYXRlIChEOjIwMTQwNjI0MDgzOTE0LTA3JzAwJykKL01vZERhdGUgKEQ6MjAxNDA2MjQwODM5MTQtMDcnMDAnKQovUHJvZHVjZXIgKEJDTCBlYXN5UERGIDcuMDAgXCgwMzUzXCkpCi9DcmVhdG9yIChlYXN5UERGIFNESyA3LjApCj4+CmVuZG9iagoKOCAwIG9iagpbCjAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAKMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDEwMDAgMTAwMAozNDIgNDAyIDU4NyA4NjcgNzExIDEyNzIgODYyIDMzMiA1NDMgNTQzIDcxMSA4NjcgMzYxIDQ4MCAzNjEgNjg5CjcxMSA3MTEgNzExIDcxMSA3MTEgNzExIDcxMSA3MTEgNzExIDcxMSA0MDIgNDAyIDg2NyA4NjcgODY3IDYxNwo5NjQgNzc2IDc2MiA3MjQgODMwIDY4MyA2NTAgODExIDgzNyA1NDYgNTU1IDc3MSA2MzcgOTQ4IDg0NyA4NTAKNzMzIDg1MCA3ODIgNzEwIDY4MiA4MTIgNzY0IDExMjggNzY0IDczNyA2OTIgNTQzIDY4OSA1NDMgODY3IDcxMQo3MTEgNjY4IDY5OSA1ODggNjk5IDY2NCA0MjIgNjk5IDcxMiAzNDIgNDAzIDY3MSAzNDIgMTA1OCA3MTIgNjg3CjY5OSA2OTkgNDk3IDU5MyA0NTYgNzEyIDY1MCA5NzkgNjY5IDY1MSA1OTcgNzExIDU0MyA3MTEgODY3IDEwMDAKNzExIDEwMDAgMzMyIDcxMSA1ODcgMTA0OSA3MTEgNzExIDcxMSAxNzc3IDcxMCA1NDMgMTEzNSAxMDAwIDY5MiAxMDAwCjEwMDAgMzMyIDMzMiA1ODcgNTg3IDcxMSA3MTEgMTAwMCA3MTEgOTY0IDU5MyA1NDMgMTA2OCAxMDAwIDU5NyA3MzcKMzQyIDQwMiA3MTEgNzExIDcxMSA3MTEgNTQzIDcxMSA3MTEgOTY0IDU5OCA4NTAgODY3IDQ4MCA5NjQgNzExCjU4NyA4NjcgNTk4IDU5OCA3MTEgNzIxIDcxMSAzNjEgNzExIDU5OCA1OTggODUwIDExODIgMTE4MiAxMTgyIDYxNwo3NzYgNzc2IDc3NiA3NzYgNzc2IDc3NiAxMDk0IDcyNCA2ODMgNjgzIDY4MyA2ODMgNTQ2IDU0NiA1NDYgNTQ2CjgzMCA4NDcgODUwIDg1MCA4NTAgODUwIDg1MCA4NjcgODUwIDgxMiA4MTIgODEyIDgxMiA3MzcgNzM1IDcxMwo2NjggNjY4IDY2OCA2NjggNjY4IDY2OCAxMDE4IDU4OCA2NjQgNjY0IDY2NCA2NjQgMzQyIDM0MiAzNDIgMzQyCjY3OSA3MTIgNjg3IDY4NyA2ODcgNjg3IDY4NyA4NjcgNjg3IDcxMiA3MTIgNzEyIDcxMiA2NTEgNjk5IDY1MQpdCmVuZG9iagoKMTEgMCBvYmoKWwowIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwCjAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAxMDAwIDEwMDAKMzUyIDM5NCA0NTkgODE4IDYzNiAxMDc2IDcyNyAyNjkgNDU0IDQ1NCA2MzYgODE4IDM2NCA0NTQgMzY0IDQ1NAo2MzYgNjM2IDYzNiA2MzYgNjM2IDYzNiA2MzYgNjM2IDYzNiA2MzYgNDU0IDQ1NCA4MTggODE4IDgxOCA1NDUKMTAwMCA2ODQgNjg2IDY5OCA3NzEgNjMyIDU3NSA3NzUgNzUxIDQyMSA0NTUgNjkzIDU1NyA4NDMgNzQ4IDc4Nwo2MDMgNzg3IDY5NSA2ODQgNjE2IDczMiA2ODQgOTg5IDY4NSA2MTUgNjg1IDQ1NCA0NTQgNDU0IDgxOCA2MzYKNjM2IDYwMSA2MjMgNTIxIDYyMyA1OTYgMzUyIDYyMyA2MzMgMjc0IDM0NCA1OTIgMjc0IDk3MyA2MzMgNjA3CjYyMyA2MjMgNDI3IDUyMSAzOTQgNjMzIDU5MiA4MTggNTkyIDU5MiA1MjUgNjM1IDQ1NCA2MzUgODE4IDEwMDAKNjM2IDEwMDAgMjY5IDYzNiA0NTkgODE4IDYzNiA2MzYgNjM2IDE1MjEgNjg0IDQ1NCAxMDcwIDEwMDAgNjg1IDEwMDAKMTAwMCAyNjkgMjY5IDQ1OSA0NTkgNTQ1IDYzNiAxMDAwIDYzNiA5NzcgNTIxIDQ1NCA5ODEgMTAwMCA1MjUgNjE1CjM1MiAzOTQgNjM2IDYzNiA2MzYgNjM2IDQ1NCA2MzYgNjM2IDEwMDAgNTQ1IDY0NSA4MTggNDU0IDEwMDAgNjM2CjU0MiA4MTggNTQyIDU0MiA2MzYgNjQyIDYzNiAzNjQgNjM2IDU0MiA1NDUgNjQ1IDEwMDAgMTAwMCAxMDAwIDU0NQo2ODQgNjg0IDY4NCA2ODQgNjg0IDY4NCA5ODQgNjk4IDYzMiA2MzIgNjMyIDYzMiA0MjEgNDIxIDQyMSA0MjEKNzc1IDc0OCA3ODcgNzg3IDc4NyA3ODcgNzg3IDgxOCA3ODcgNzMyIDczMiA3MzIgNzMyIDYxNSA2MDUgNjIwCjYwMSA2MDEgNjAxIDYwMSA2MDEgNjAxIDk1NSA1MjEgNTk2IDU5NiA1OTYgNTk2IDI3NCAyNzQgMjc0IDI3NAo2MTIgNjMzIDYwNyA2MDcgNjA3IDYwNyA2MDcgODE4IDYwNyA2MzMgNjMzIDYzMyA2MzMgNTkyIDYyMyA1OTIKXQplbmRvYmoKCjEgMCBvYmoKPDwKL0NvdW50IDAKPj4KZW5kb2JqCgozIDAgb2JqCjw8Ci9UeXBlIC9DYXRhbG9nCi9QYWdlcyA0IDAgUgo+PgplbmRvYmoKCjEzIDAgb2JqCjw8Ci9MZW5ndGggMjA2OAovRmlsdGVyIC9GbGF0ZURlY29kZQo+PgpzdHJlYW0KeNp1V9uO2zgSfc9XGHlpNtDtFSlZl8dNI7MziwRYZIx5mcwDLdMtTsuioEt3/PdzqoqyvdMepIHIElmsyzmnip+2H/71k96s9Gp7+KDNKsE//FfgLylX2+OH39WXMLjj6v4xyzP1Sz/Ox/s/Vtv/0rb879t0UaxNdtnqR9qXpWr0x7490Y9Novbz8SjPqZrcj4ltGxUO/K5UU+P4aaP6wXeT7575Z65st+cnraZT70Y3yTd257FcF8XqUa+NWW33dHa3n8dpOK2xRWfFOQydFxJGfN9YclJvjNo51/FjFV3QcGExcyerEjVOcMMOezaVnYPRm2wJRsNB9+qG6FnCXmnxavRdTabTwsRD0mKjYDcZH+hHWaq3ht1IiwIB80Om5u6lC29dXMFpIfv8bQrhhR9LZXlBrp5t27pTNMJ5pa+UNF5gJJNX3sWcjfVgj7vWcXCohOdw8gRnxMwd7QtnBk7b+Cqa1Sjh2LvaH2MWtdrBM05/vlG/THFNzDetnodX/yqH4YwuyJJUhY6xQmsOWHArj7XrpnnwLmZN7WaGEVLQjuQrVYPTixK2zvaMQxSTA8kq5VpXT0PofM2IugYUWQRkgRbrOwEfrLlxxJEeiT3dytzc1Y3tnt2e4jVpIfEa2HnjeM2mUH3o59YOfuSQTZbDH35Ioq8GzuoqT2SDUW9+atjcAkiDGAa4bkcXbXJxDQL64qYBr6eboGucm8ZYrjp00zkwQi0Rgw5Rx6VUCzvIZzuO9lnSTLuFgjrX6ohtjARyicoRa5Ytbuu8Uns3vkyhf58x1c+71o8NuTGGw/RmYa31ANe/WxBu9T8c+hVYG1YgTDvvaR0oNfrQjSsELWxmT9f3q+2fZNus01IC5uSXqehPZRiqVaHawEFXCao5WT6fS1FpdbD1JJ+mxvKTALwsEJ3dM9lg4c23rbzdUfAlIvRQB2wWQ5naneRIKViV8XacdQPFXAokjuKxqx4Rr5j7LWhD8cIPj7K19hTmab3awmIfvKyfR1pxlYXVkoUrBWQcJWYJCdASRhudRBqaJOUwTZJzQR/D8NgC6nFRF4ajbaMVjtSDaKgBv9IRfUkJik0QJEYJLY22cxX6PkS4JwWryA3qjIJFAyTdPcWU4Cfq17jBsU1IVn35UlT85e4hLoMoLSZ0jBCFbEUXDSSQgSVmLuXAl1x97p4JButbtPlqOyqmMeUFx+CJvsYufc7BkvqFWMLfk0gSenpzu2UPlZceISV7P4VBFufI8RtbqZAIXmHOvep9rhZqpjiUk5ySdjXOczOA7b072Lmd+EuGku5dy1823JxYLLOFxSnc4o4BuRqdHeqGf1TqENhcptVdG7sm/fB0+B2fvolMeJ80CGHg3veIjnOUDOZlTATKM/qJ80SPk7CpSEQIS30OpQB3u4Ptam7f0J3foJthHmXVWQiwMAeSqUXQk3sNLfeT94mLPplys0gpOtgJQQtmsXkMRzeheXFd0J2ZyIQYW9d+D+QJ2vS7hcIGiEM/D4R2fl2q74jgTyfC8I75zXwM87CiOpA7hM/v9zeEjOgw2IGVFc1N2nB2biX8K4EWtd4dWKLRCs+DzuZq0EGJWQ40OlJstNdjmUZ5B3gTjlejzDpulNa9ia37fW6HELi7oClwHTcCKwxsvUdnQDdNEpEKjBR1i47i741WNSsLNn2xE+9DgC3QMVh0dq4o2v/AHuFLthGTn54oTowLTPp7Y1Rs0Mx7jG6x0nmuTJIktyDKZSer8Krlhg2mfvNo4DzVgTdf66eWZoX6hYueczw0Qy6eVpjBwgFCyUxBJ2eBTVP1sz32AMvjr6d9xxMY+upTwDT27G6lTgYAJOM3PzyjKVs+D3ZIvEQ3wce5j6tCJxoSh2VSpohmEDw2ZFKYsBtrySHpyuK10eBhGPYCeSAFkjoSQpHvh1vexezrvDwPe2dwFVfgyvNlTnhYlsuYAGY/hzhpYMPUDGF+blAms4w8NC/UURJ0GeMiC5fP5DIbSDldN2ZBhpTAqUyuMETe4Fg0LtYkzmexmAb/ZwB+3k2xHWCwHkHK2q1l2RIq3i+RItA6MPP/IVkjTVKA9sTypNc6WaeGx29OibxI6QU3z497rlGlfkLtd5C3TwEtVxS+UBjmvtqWfn+UVd8VzQA3MvD5xwRf3fh/QyHI9p8QGEMY6mJPAjc/v/r2+z2/XlQOD0++dkMQuGv1Nng09C7+EvTg7sMkNDmxkOdc0G3byJiBQu1iw8Vbv4yw9laq4CwgOS5XrNDF68Zy6+LZPYjq4bVgAg9uanwtoyjaHip6ileHKznk++VwmW4vOPrmOuuB0k4qTIL2D+k8+GFkPlcAE1NuE2ed7AKLLMLi4R7dUH5/XL7R1SlCBmqyD63IREXdT+4rFj1kvf5IseAWHEH1COcvimdFWcSDd/MzakLcpVkswuxG+9hGcUivb61Gg3INbpRxeIlSUp0jI1lZEG90TnMJ70Ocy/XVQNai8phMrq9RmKTyhu5PkMj9XN/qf79Ty+K5h6on4wbd9qZG+ie1OL7iYk6XK5VG8n51kVfSDC/soht7VBwU6kIyfcknLRG20cuFbjeweWGgzgxRUHrgFRE1CM600elCG16dKSs3IghwvIVqpOw6D/gW2UQPy7BDndj9kAuIRq3C4NELbHtTZTCRM0npflIDN73tPJtOk3j5MFW6jLVxMLmal1IM5TElpjpfK3FN0ZXO+DsKi0lgbO0y51flxe7PNwZl9Q3Tb2PjPezz9sNfd8bwDwplbmRzdHJlYW0KZW5kb2JqCgo2IDAgb2JqCjw8Ci9UeXBlIC9QYWdlCi9QYXJlbnQgNCAwIFIKL01lZGlhQm94IFsgMCAwIDYxMiA3OTIgXQovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9GMTUgNyAwIFIKL0YxNiAxMCAwIFIKPj4KL1Byb2NTZXQgWy9QREYgL1RleHQgL0ltYWdlQiAvSW1hZ2VDXSA+PgovQ29udGVudHMgMTMgMCBSCj4+CmVuZG9iagoKNCAwIG9iago8PAovVHlwZSAvUGFnZXMKL0tpZHMgWwo2IDAgUgpdCi9Db3VudCAxCj4+CmVuZG9iagoKOSAwIG9iago8PAovVHlwZSAvRm9udERlc2NyaXB0b3IKL0FzY2VudCAxMDA1Ci9DYXBIZWlnaHQgNzkwCi9EZXNjZW50IC0yMTAKL0ZsYWdzIDMyCi9Gb250QkJveCBbMCAtMjEwIDE3ODAgMTAwNV0KL0l0YWxpY0FuZ2xlIDAKL1N0ZW1WIDAKL0ZvbnROYW1lIC9WZXJkYW5hLUJvbGQKPj4KZW5kb2JqCgo3IDAgb2JqCjw8Ci9UeXBlIC9Gb250Ci9TdWJ0eXBlIC9UcnVlVHlwZQovQmFzZUZvbnQgL1ZlcmRhbmEtQm9sZAovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwovRmlyc3RDaGFyIDAKL0xhc3RDaGFyIDI1NQovRm9udERlc2NyaXB0b3IgOSAwIFIKL1dpZHRocyA4IDAgUgo+PgplbmRvYmoKCjEyIDAgb2JqCjw8Ci9UeXBlIC9Gb250RGVzY3JpcHRvcgovQXNjZW50IDEwMDUKL0NhcEhlaWdodCA3OTAKL0Rlc2NlbnQgLTIxMAovRmxhZ3MgMzIKL0ZvbnRCQm94IFswIC0yMTAgMTQ5NyAxMDA1XQovSXRhbGljQW5nbGUgMAovU3RlbVYgMAovRm9udE5hbWUgL1ZlcmRhbmEKPj4KZW5kb2JqCgoxMCAwIG9iago8PAovVHlwZSAvRm9udAovU3VidHlwZSAvVHJ1ZVR5cGUKL0Jhc2VGb250IC9WZXJkYW5hCi9FbmNvZGluZyAvV2luQW5zaUVuY29kaW5nCi9GaXJzdENoYXIgMAovTGFzdENoYXIgMjU1Ci9Gb250RGVzY3JpcHRvciAxMiAwIFIKL1dpZHRocyAxMSAwIFIKPj4KZW5kb2JqCgo1IDAgb2JqCm51bGwKZW5kb2JqCgp4cmVmCjAgMTQKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAyMTg1IDAwMDAwIG4gCjAwMDAwMDAwMTUgMDAwMDAgbiAKMDAwMDAwMjIxNiAwMDAwMCBuIAowMDAwMDA0NTkwIDAwMDAwIG4gCjAwMDAwMDUzMjQgMDAwMDAgbiAKMDAwMDAwNDQwOSAwMDAwMCBuIAowMDAwMDA0ODIzIDAwMDAwIG4gCjAwMDAwMDAxNzcgMDAwMDAgbiAKMDAwMDAwNDY1MCAwMDAwMCBuIAowMDAwMDA1MTU5IDAwMDAwIG4gCjAwMDAwMDExODIgMDAwMDAgbiAKMDAwMDAwNDk5MCAwMDAwMCBuIAowMDAwMDAyMjY2IDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgMTQKL1Jvb3QgMyAwIFIKL0luZm8gMiAwIFIKL0lEWzw5ZDM3MGIwYTA5M2RkOTFlZjg0ODkyNDlkMTFhZmNmMz48OWQzNzBiMGEwOTNkZDkxZWY4NDg5MjQ5ZDExYWZjZjM+XQo+PgpzdGFydHhyZWYKNTM0NQolJUVPRgo=";
        System.out.println("pdfInitial");
        System.out.println(pdfInitial);
        //String pdfFinal = encryptPdfWithPassword(pdfInitial, "123456", "123456");
        encryptPdfWithPasswordOnFile(pdfInitial, "123456", "123456");
        //System.out.println("pdfFinal");
        //System.out.println(pdfFinal);
        System.out.println("END");
    }

    public String encryptPdfWithPassword(String pdfBase64, String passwordUser, String passwordOwner) throws IOException, DocumentException {
        PdfReader reader = new PdfReader(Base64.decode(pdfBase64));
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        PdfStamper stamper = new PdfStamper(reader, baos);
        stamper.setEncryption(passwordUser.getBytes(), passwordOwner.getBytes(), PdfWriter.ALLOW_PRINTING, PdfWriter.ENCRYPTION_AES_128);
        stamper.close();
        String base64 = Base64.encodeBytes(baos.toByteArray());

        return base64;
    }

    public void encryptPdfWithPasswordOnFile(String pdfBase64, String passwordUser, String passwordOwner) throws IOException, DocumentException {
        PdfReader reader = new PdfReader(Base64.decode(pdfBase64));
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        PdfStamper stamper = new PdfStamper(reader, baos);
        stamper.setEncryption(passwordUser.getBytes(), passwordOwner.getBytes(), PdfWriter.ALLOW_PRINTING, PdfWriter.ENCRYPTION_AES_128);
        stamper.close();
        FileOutputStream fos = new FileOutputStream(new File("D:\\demo.pdf"));
        fos.write(baos.toByteArray());
        fos.flush();
        fos.close();
    }
}
